{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,2BAiBjC,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,MAEpBA,MAzBPJ,EAAKC,KAAKe,iBAAiB,UAC3B,SAAyBC,GACvBA,EAAEC,iBACF,IAAId,EAAQe,OAAOnB,EAAKI,MAAMgB,OAC9B,MAAMf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAElC,IAAK,IAAIC,EAAQ,EAAGA,EAAQf,EAAQe,GAAS,EAAG,CAE9Cd,EAAcc,EADIjB,EAAQC,GAAQgB,EAAQ,IAEvCC,MAAKC,GAAWzB,EAAA0B,OAAOC,QAAQF,KAC/BG,OAAMC,GAAS7B,EAAA0B,OAAOI,QAAQD,SAkBrCpB,EAAc,EAAG,MACde,MAAK,EAACd,SAAEA,EAAQJ,MAAEA,MACjByB,QAAQC,IAAI,uBAAqBtB,QAAiBJ,UAEnDsB,OAAM,EAAClB,SAAEA,EAAQJ,MAAEA,MAClByB,QAAQC,IAAI,sBAAoBtB,QAAeJ","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n};\nrefs.form.addEventListener('submit', clickFormSubmit);\nfunction clickFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let index = 1; index < amount; index += 1) {\n    const delayStep = delay + step * (index + 1);\n    createPromise(index, delayStep)\n      .then(message => Notify.success(message))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","addEventListener","e","preventDefault","Number","value","index","then","message","Notify","success","catch","error","failure","console","log"],"version":3,"file":"03-promises.2f15c40e.js.map"}