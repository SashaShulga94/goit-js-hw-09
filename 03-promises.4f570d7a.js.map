{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAE1BF,KAAKG,iBAAiB,UAC3B,SAAyBC,G,kBAUrB,IAAMC,EAAYC,EAAaC,GAAaC,EAAQ,IAWxD,SAAuBC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,OApBHQ,CAAcV,EAAOH,GAClBc,MAAK,SAAAC,G,OACJtB,EAAAuB,OAAOC,QAAQ,uBAAqCC,OAAZf,EAAM,QAAgBe,OAAVlB,EAAU,UAE/DmB,OAAM,SAAAC,G,OACL3B,EAAAuB,OAAOK,QAAQ,sBAAkCH,OAAZf,EAAM,QAAgBe,OAAVlB,EAAU,WAfjED,EAAEuB,iBAQF,IAPA,IAEYC,EAARxB,EAAEyB,OADJC,SAAYpB,EAAKkB,EAALlB,MAAOqB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAEvB1B,EAAa2B,OAAOvB,EAAMwB,OACxB3B,EAAY0B,OAAOF,EAAKG,OACxBC,EAAcF,OAAOD,EAAOE,OAEzBE,EAAQ,EAAGA,EAAQD,EAAaC,GAAS,EAACC,EAAAD,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\nrefs.form.addEventListener('submit', clickFormSubmit);\nfunction clickFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let index = 1; index < amountValue; index += 1) {\n    const delayStep = delayValue + stepValue * (index + 1);\n    createPromise(index, delayStep)\n      .then(message =>\n        Notify.success(`✅ Fulfilled promise ${index} in ${delayStep}ms`)\n      )\n      .catch(error =>\n        Notify.failure(`❌ Rejected promise ${index} in ${delayStep}ms`)\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","e","delayStep","delayValue","stepValue","index","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","message","Notify","success","concat","catch","error","failure","preventDefault","_elements","target","elements","step","amount","Number","value","amountValue","index1","_loop"],"version":3,"file":"03-promises.4f570d7a.js.map"}