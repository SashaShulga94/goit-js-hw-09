{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,OAnCM,CACXQ,KAAMC,SAASC,cAAc,WAE1BF,KAAKG,iBAAiB,UAC3B,SAAyBC,GACvBA,EAAEC,iBACF,MACEC,UAAUd,MAAEA,EAAKe,KAAEA,EAAIC,OAAEA,IACvBJ,EAAEK,OACN,IAAIC,EAAaC,OAAOnB,EAAMoB,OAC9B,MAAMC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElC,IAAK,IAAIG,EAAQ,EAAGA,EAAQD,EAAaC,GAAS,EAAG,CACnD,MAAMC,EAAYN,EAAaG,GAAaE,EAAQ,GACpDzB,EAAcyB,EAAOC,GAClBC,MAAKC,GACJ9B,EAAA+B,OAAOC,QAAQ,uBAAqBL,QAAcC,SAAgBK,OAE9DC,GACJlC,EAAA+B,OAAMI,QAAC,sBAASR,QAA2BC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\nrefs.form.addEventListener('submit', clickFormSubmit);\nfunction clickFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.target;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let index = 1; index < amountValue; index += 1) {\n    const delayStep = delayValue + stepValue * (index + 1);\n    createPromise(index, delayStep)\n      .then(message =>\n        Notify.success(`✅ Fulfilled promise ${index} in ${delayStep}ms`)\n      )\n      .catch(error =>\n        Notify.failure(`❌ Rejected promise ${index} in ${delayStep}ms`)\n      );\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","elements","step","amount","target","delayValue","Number","value","stepValue","amountValue","index","delayStep","then","message","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.0f48f478.js.map"}