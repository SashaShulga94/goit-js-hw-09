{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,yBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,2BAiBjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUJ,UAEpBU,EAAO,CAAEN,WAAUJ,YAEpBA,MAzBPJ,EAAKC,KAAKe,iBAAiB,UAC3B,SAAyBC,GACvBA,EAAEC,iBAKF,IAJA,IAAId,EAAQe,OAAOnB,EAAKI,MAAMgB,OACxBf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAEzBC,EAAQ,EAAGA,EAAQf,EAAQe,GAAS,EAAG,CAE9Cd,EAAcc,EADIjB,EAAQC,GAAQgB,EAAQ,IAEvCC,MAAK,SAAAC,G,OAAWzB,EAAA0B,OAAOC,QAAQF,MAC/BG,OAAM,SAAAC,G,OAAS7B,EAAA0B,OAAOI,QAAQD,UAkBrCpB,EAAc,EAAG,MACde,MAAK,SAAAO,G,IAAGrB,EAAQqB,EAARrB,SAAUJ,EAAKyB,EAALzB,MACjB0B,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAAN5B,EAAM,UAE3DsB,OAAM,SAAAG,G,IAAGrB,EAAQqB,EAARrB,SAAUJ,EAAKyB,EAALzB,MAClB0B,QAAQC,IAAI,sBAAqCC,OAAfxB,EAAS,QAAYwB,OAAN5B,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n};\nrefs.form.addEventListener('submit', clickFormSubmit);\nfunction clickFormSubmit(e) {\n  e.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let index = 1; index < amount; index += 1) {\n    const delayStep = delay + step * (index + 1);\n    createPromise(index, delayStep)\n      .then(message => Notify.success(message))\n      .catch(error => Notify.failure(error));\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((fulfill, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        fulfill({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","fulfill","reject","setTimeout","addEventListener","e","preventDefault","Number","value","index","then","message","Notify","success","catch","error","failure","param","console","log","concat"],"version":3,"file":"03-promises.a45f4f64.js.map"}